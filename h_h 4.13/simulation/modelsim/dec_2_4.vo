// Copyright (C) 1991-2009 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 9.0 Build 235 06/17/2009 Service Pack 2 SJ Web Edition"

// DATE "03/12/2021 13:39:14"

// 
// Device: Altera EPF10K50SQC240-3 Package PQFP240
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ns/ 1 ps

module dec_2_4 (
	sel,
	y);
input 	[1:0] sel;
output 	[3:0] y;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("dec_2_4_v.sdo");
// synopsys translate_on

wire \Decoder0~0_combout ;
wire \Decoder0~1_combout ;
wire \Decoder0~2_combout ;
wire \Decoder0~3_combout ;
wire [1:0] \sel~dataout ;


// atom is at PIN_212
flex10ke_io \sel[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\sel~dataout [0]),
	.padio(sel[0]));
// synopsys translate_off
defparam \sel[0]~I .feedback_mode = "from_pin";
defparam \sel[0]~I .operation_mode = "input";
defparam \sel[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_210
flex10ke_io \sel[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\sel~dataout [1]),
	.padio(sel[1]));
// synopsys translate_off
defparam \sel[1]~I .feedback_mode = "from_pin";
defparam \sel[1]~I .operation_mode = "input";
defparam \sel[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC6_A16
flex10ke_lcell \Decoder0~0 (
// Equation(s):
// \Decoder0~0_combout  = \sel~dataout [0] # \sel~dataout [1]

	.dataa(vcc),
	.datab(vcc),
	.datac(\sel~dataout [0]),
	.datad(\sel~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~0_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Decoder0~0 .clock_enable_mode = "false";
defparam \Decoder0~0 .lut_mask = "fff0";
defparam \Decoder0~0 .operation_mode = "normal";
defparam \Decoder0~0 .output_mode = "comb_only";
defparam \Decoder0~0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_A3
flex10ke_lcell \Decoder0~1 (
// Equation(s):
// \Decoder0~1_combout  = \sel~dataout [0] & !\sel~dataout [1]

	.dataa(vcc),
	.datab(vcc),
	.datac(\sel~dataout [0]),
	.datad(\sel~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~1_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Decoder0~1 .clock_enable_mode = "false";
defparam \Decoder0~1 .lut_mask = "00f0";
defparam \Decoder0~1 .operation_mode = "normal";
defparam \Decoder0~1 .output_mode = "comb_only";
defparam \Decoder0~1 .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_A16
flex10ke_lcell \Decoder0~2 (
// Equation(s):
// \Decoder0~2_combout  = \sel~dataout [1] & !\sel~dataout [0]

	.dataa(vcc),
	.datab(vcc),
	.datac(\sel~dataout [1]),
	.datad(\sel~dataout [0]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~2_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Decoder0~2 .clock_enable_mode = "false";
defparam \Decoder0~2 .lut_mask = "00f0";
defparam \Decoder0~2 .operation_mode = "normal";
defparam \Decoder0~2 .output_mode = "comb_only";
defparam \Decoder0~2 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_A3
flex10ke_lcell \Decoder0~3 (
// Equation(s):
// \Decoder0~3_combout  = \sel~dataout [0] & \sel~dataout [1]

	.dataa(vcc),
	.datab(vcc),
	.datac(\sel~dataout [0]),
	.datad(\sel~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~3_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Decoder0~3 .clock_enable_mode = "false";
defparam \Decoder0~3 .lut_mask = "f000";
defparam \Decoder0~3 .operation_mode = "normal";
defparam \Decoder0~3 .output_mode = "comb_only";
defparam \Decoder0~3 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_172
flex10ke_io \y[0]~I (
	.datain(!\Decoder0~0_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[0]));
// synopsys translate_off
defparam \y[0]~I .feedback_mode = "none";
defparam \y[0]~I .operation_mode = "output";
defparam \y[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_175
flex10ke_io \y[1]~I (
	.datain(\Decoder0~1_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[1]));
// synopsys translate_off
defparam \y[1]~I .feedback_mode = "none";
defparam \y[1]~I .operation_mode = "output";
defparam \y[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_171
flex10ke_io \y[2]~I (
	.datain(\Decoder0~2_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[2]));
// synopsys translate_off
defparam \y[2]~I .feedback_mode = "none";
defparam \y[2]~I .operation_mode = "output";
defparam \y[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_173
flex10ke_io \y[3]~I (
	.datain(\Decoder0~3_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[3]));
// synopsys translate_off
defparam \y[3]~I .feedback_mode = "none";
defparam \y[3]~I .operation_mode = "output";
defparam \y[3]~I .reg_source_mode = "none";
// synopsys translate_on

endmodule

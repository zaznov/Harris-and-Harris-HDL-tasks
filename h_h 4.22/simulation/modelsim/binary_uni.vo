// Copyright (C) 1991-2009 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 9.0 Build 235 06/17/2009 Service Pack 2 SJ Web Edition"

// DATE "03/16/2021 11:43:21"

// 
// Device: Altera EPF10K50SQC240-3 Package PQFP240
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ns/ 1 ps

module binary_uni (
	a,
	y);
input 	[2:0] a;
output 	[7:0] y;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("binary_uni_v.sdo");
// synopsys translate_on

wire \y~1_combout ;
wire \y~9_combout ;
wire \y~3_combout ;
wire \y[3]~19_combout ;
wire \y~10_combout ;
wire \y~11_combout ;
wire \y~12_combout ;
wire [2:0] \a~dataout ;


// atom is at PIN_90
flex10ke_io \a[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\a~dataout [0]),
	.padio(a[0]));
// synopsys translate_off
defparam \a[0]~I .feedback_mode = "from_pin";
defparam \a[0]~I .operation_mode = "input";
defparam \a[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_212
flex10ke_io \a[2]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\a~dataout [2]),
	.padio(a[2]));
// synopsys translate_off
defparam \a[2]~I .feedback_mode = "from_pin";
defparam \a[2]~I .operation_mode = "input";
defparam \a[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_210
flex10ke_io \a[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\a~dataout [1]),
	.padio(a[1]));
// synopsys translate_off
defparam \a[1]~I .feedback_mode = "from_pin";
defparam \a[1]~I .operation_mode = "input";
defparam \a[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC1_C32
flex10ke_lcell \y~1 (
// Equation(s):
// \y~1_combout  = \a~dataout [0] # \a~dataout [2] # \a~dataout [1]

	.dataa(vcc),
	.datab(\a~dataout [0]),
	.datac(\a~dataout [2]),
	.datad(\a~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\y~1_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y~1 .clock_enable_mode = "false";
defparam \y~1 .lut_mask = "fffc";
defparam \y~1 .operation_mode = "normal";
defparam \y~1 .output_mode = "comb_only";
defparam \y~1 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_C2
flex10ke_lcell \y~9 (
// Equation(s):
// \y~9_combout  = !\a~dataout [2] & !\a~dataout [1]

	.dataa(vcc),
	.datab(vcc),
	.datac(\a~dataout [2]),
	.datad(\a~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\y~9_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y~9 .clock_enable_mode = "false";
defparam \y~9 .lut_mask = "000f";
defparam \y~9 .operation_mode = "normal";
defparam \y~9 .output_mode = "comb_only";
defparam \y~9 .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_C32
flex10ke_lcell \y~3 (
// Equation(s):
// \y~3_combout  = \a~dataout [2] # \a~dataout [0] & \a~dataout [1]

	.dataa(vcc),
	.datab(\a~dataout [2]),
	.datac(\a~dataout [0]),
	.datad(\a~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\y~3_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y~3 .clock_enable_mode = "false";
defparam \y~3 .lut_mask = "fccc";
defparam \y~3 .operation_mode = "normal";
defparam \y~3 .output_mode = "comb_only";
defparam \y~3 .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_C32
flex10ke_lcell \y[3]~19 (
// Equation(s):
// \y[3]~19_combout  = \a~dataout [2]

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\a~dataout [2]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\y[3]~19_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y[3]~19 .clock_enable_mode = "false";
defparam \y[3]~19 .lut_mask = "ff00";
defparam \y[3]~19 .operation_mode = "normal";
defparam \y[3]~19 .output_mode = "comb_only";
defparam \y[3]~19 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_I31
flex10ke_lcell \y~10 (
// Equation(s):
// \y~10_combout  = \a~dataout [2] & (\a~dataout [0] # \a~dataout [1])

	.dataa(vcc),
	.datab(\a~dataout [2]),
	.datac(\a~dataout [0]),
	.datad(\a~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\y~10_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y~10 .clock_enable_mode = "false";
defparam \y~10 .lut_mask = "ccc0";
defparam \y~10 .operation_mode = "normal";
defparam \y~10 .output_mode = "comb_only";
defparam \y~10 .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_C32
flex10ke_lcell \y~11 (
// Equation(s):
// \y~11_combout  = \a~dataout [2] & \a~dataout [1]

	.dataa(vcc),
	.datab(vcc),
	.datac(\a~dataout [2]),
	.datad(\a~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\y~11_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y~11 .clock_enable_mode = "false";
defparam \y~11 .lut_mask = "f000";
defparam \y~11 .operation_mode = "normal";
defparam \y~11 .output_mode = "comb_only";
defparam \y~11 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_C32
flex10ke_lcell \y~12 (
// Equation(s):
// \y~12_combout  = \a~dataout [0] & \a~dataout [2] & \a~dataout [1]

	.dataa(vcc),
	.datab(\a~dataout [0]),
	.datac(\a~dataout [2]),
	.datad(\a~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\y~12_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y~12 .clock_enable_mode = "false";
defparam \y~12 .lut_mask = "c000";
defparam \y~12 .operation_mode = "normal";
defparam \y~12 .output_mode = "comb_only";
defparam \y~12 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_164
flex10ke_io \y[0]~I (
	.datain(\y~1_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[0]));
// synopsys translate_off
defparam \y[0]~I .feedback_mode = "none";
defparam \y[0]~I .operation_mode = "output";
defparam \y[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_163
flex10ke_io \y[1]~I (
	.datain(!\y~9_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[1]));
// synopsys translate_off
defparam \y[1]~I .feedback_mode = "none";
defparam \y[1]~I .operation_mode = "output";
defparam \y[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_20
flex10ke_io \y[2]~I (
	.datain(\y~3_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[2]));
// synopsys translate_off
defparam \y[2]~I .feedback_mode = "none";
defparam \y[2]~I .operation_mode = "output";
defparam \y[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_21
flex10ke_io \y[3]~I (
	.datain(\y[3]~19_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[3]));
// synopsys translate_off
defparam \y[3]~I .feedback_mode = "none";
defparam \y[3]~I .operation_mode = "output";
defparam \y[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_233
flex10ke_io \y[4]~I (
	.datain(\y~10_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[4]));
// synopsys translate_off
defparam \y[4]~I .feedback_mode = "none";
defparam \y[4]~I .operation_mode = "output";
defparam \y[4]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_19
flex10ke_io \y[5]~I (
	.datain(\y~11_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[5]));
// synopsys translate_off
defparam \y[5]~I .feedback_mode = "none";
defparam \y[5]~I .operation_mode = "output";
defparam \y[5]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_18
flex10ke_io \y[6]~I (
	.datain(\y~12_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[6]));
// synopsys translate_off
defparam \y[6]~I .feedback_mode = "none";
defparam \y[6]~I .operation_mode = "output";
defparam \y[6]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_173
flex10ke_io \y[7]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y[7]));
// synopsys translate_off
defparam \y[7]~I .feedback_mode = "none";
defparam \y[7]~I .operation_mode = "output";
defparam \y[7]~I .reg_source_mode = "none";
// synopsys translate_on

endmodule

// Copyright (C) 1991-2009 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 9.0 Build 235 06/17/2009 Service Pack 2 SJ Web Edition"

// DATE "03/17/2021 15:08:39"

// 
// Device: Altera EPF10K50SQC240-3 Package PQFP240
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ns/ 1 ps

module SR_latch (
	R,
	S,
	Q);
input 	R;
input 	S;
output 	Q;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("SR-latch_v.sdo");
// synopsys translate_on

wire \S~dataout ;
wire \R~dataout ;
wire \Q$latch~combout ;


// atom is at PIN_212
flex10ke_io \S~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\S~dataout ),
	.padio(S));
// synopsys translate_off
defparam \S~I .feedback_mode = "from_pin";
defparam \S~I .operation_mode = "input";
defparam \S~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_210
flex10ke_io \R~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\R~dataout ),
	.padio(R));
// synopsys translate_off
defparam \R~I .feedback_mode = "from_pin";
defparam \R~I .operation_mode = "input";
defparam \R~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC2_E19
flex10ke_lcell Q$latch(
// Equation(s):
// \Q$latch~combout  = !\R~dataout  & (\Q$latch~combout  # \S~dataout )

	.dataa(vcc),
	.datab(\Q$latch~combout ),
	.datac(\S~dataout ),
	.datad(\R~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Q$latch~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam Q$latch.clock_enable_mode = "false";
defparam Q$latch.lut_mask = "00fc";
defparam Q$latch.operation_mode = "normal";
defparam Q$latch.output_mode = "comb_only";
defparam Q$latch.packed_mode = "false";
// synopsys translate_on

// atom is at PIN_87
flex10ke_io \Q~I (
	.datain(\Q$latch~combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(Q));
// synopsys translate_off
defparam \Q~I .feedback_mode = "none";
defparam \Q~I .operation_mode = "output";
defparam \Q~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
